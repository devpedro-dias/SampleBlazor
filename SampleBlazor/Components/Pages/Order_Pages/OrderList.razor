@page "/order/list"
@using System.Security.Claims
@inject IJSRuntime _JS
@inject IOrderRepository _orderRepository
@inject NavigationManager _navigationManager
@attribute [Authorize]

@if (isLoading)
{
    <div class="position-absolute w-100 vh-100 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 d-flex justify-content-between align-items-center">
                    <h2 class="text-black py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div>
            @if (OrderHeaders.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Phone Number</th>
                            <th>Email</th>
                            <th>Order Total</th>
                            <th>Order Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in OrderHeaders)
                        {
                            <tr>
                                <td>
                                    @obj.Id
                                </td>
                                <td>
                                    @obj.PhoneNumber
                                </td>
                                <td>
                                    @obj.Email
                                </td>
                                <td>
                                    @obj.OrderTotal
                                </td>
                                <td>
                                    @obj.OrderDate
                                </td>
                                <td>
                                    @obj.Status
                                </td>

                                <td>
                                    <a href="@($"order/details/{obj.Id}")" class="btn btn-primary">
                                        <i class="bi bi-eye-fill"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool isLoading { get; set; } = true;
    private IEnumerable<OrderHeader> OrderHeaders { get; set; } = new List<OrderHeader>();

    public Task<AuthenticationState> AuthenticationState { get; set; }
    private bool? isAdmin { get; set; }
    private string? UserId { get; set; }
    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadOrderHeaders();
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadOrderHeaders()
    {
        StateHasChanged();

        await CheckAuthorization();
        if(isAdmin == true)
        {
            OrderHeaders = await _orderRepository.GetAllAsync();
        } else
        {
            OrderHeaders = await _orderRepository.GetAllAsync(UserId);
        }
        isLoading = false;
    }

    private async Task CheckAuthorization()
    {
        if(AuthenticationState is not null)
        {
            var authState = await AuthenticationState;
            var user = authState?.User;

            isAdmin = user?.IsInRole(SD.Role_Admin);
            UserId = user?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        }
    }
}
