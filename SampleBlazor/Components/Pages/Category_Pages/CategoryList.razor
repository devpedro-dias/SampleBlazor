@page "/category"
@inject ICategoryRepository _categoryRepository


@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center h-100">
        Loading
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 d-flex justify-content-between align-items-center">
                    <h2 class="text-black py-2">Category List</h2>
                    <a href="category/create" class="btn btn-secondary" style="width: 250px; height: 40px;"><i class="bi bi-plus-square m-1"></i>Add new Category</a>
                </div>
            </div>
        </div>
        <div>
            @if (Categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in Categories)
                        {
                            <tr>
                                <td>
                                    @obj.Name
                                </td>

                                <td>
                                    <a href="@($"category/update/{obj.Id}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i></a>
                                    <button class="btn btn-danger">
                                        <i class="bi bi-trash3"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool isLoading { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
        Categories = await _categoryRepository.GetAllAsync();
    }
}
